require 'tempfile'

module Landrush
  class ResolverConfig
    def self.desired_contents; <<-EOS.gsub(/^      /, '')
      # Generated by landrush, a vagrant plugin
      nameserver 127.0.0.1
      port 10053
      EOS
    end

    def self.osx?
      `uname`.chomp == 'Darwin'
    end

    def self.config_dir
      @config_dir ||= Pathname('/etc/resolver')
    end

    def self.config_file
      config_dir.join('vagrant.dev')
    end

    def self.contents_match?
      config_file.exist? && File.read(config_file) == desired_contents
    end

    def self.write_config(opts)
      puts "Mometarily using sudo to put the host config in place..."
      sudo = opts.fetch(:sudo, 'sudo')
      system "#{sudo} mkdir #{config_dir}" unless config_dir.directory?
      Tempfile.open('vagrant_landrush_host_config') do |f|
        f.write(desired_contents)
        f.close
        system "#{sudo} cp #{f.path} #{config_file}"
        system "#{sudo} chmod 644 #{config_file}"
      end
    end

    def self.ensure_config_exists(opts={})
      unless osx?
        puts "Not an OSX machine, so skipping host DNS resolver config."
        return
      end

      if contents_match?
        puts "Host DNS resolver config looks good."
      else
        puts "Need to configure the host."
        write_config(opts)
      end
    end

    def self.puts(str)
      Kernel.puts("[landrush] #{str}")
    end
  end
end
